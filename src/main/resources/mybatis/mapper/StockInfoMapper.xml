<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lijin.mylab.dao.mybatis.mapper.StockInfoDAO">
  <resultMap id="BaseResultMap" type="com.lijin.mylab.dao.mybatis.model.StockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    <id column="stock_no" jdbcType="CHAR" property="stockNo" />
    <result column="stock_nm" jdbcType="VARCHAR" property="stockNm" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    stock_no, stock_nm
  </sql>
  <select id="selectByExample" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_info
    where stock_no = #{stockNo,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    delete from tbl_stock_info
    where stock_no = #{stockNo,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    delete from tbl_stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    insert into tbl_stock_info (stock_no, stock_nm)
    values (#{stockNo,jdbcType=CHAR}, #{stockNm,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    insert into tbl_stock_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockNo != null">
        stock_no,
      </if>
      <if test="stockNm != null">
        stock_nm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockNo != null">
        #{stockNo,jdbcType=CHAR},
      </if>
      <if test="stockNm != null">
        #{stockNm,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    select count(*) from tbl_stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    update tbl_stock_info
    <set>
      <if test="record.stockNo != null">
        stock_no = #{record.stockNo,jdbcType=CHAR},
      </if>
      <if test="record.stockNm != null">
        stock_nm = #{record.stockNm,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    update tbl_stock_info
    set stock_no = #{record.stockNo,jdbcType=CHAR},
      stock_nm = #{record.stockNm,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    update tbl_stock_info
    <set>
      <if test="stockNm != null">
        stock_nm = #{stockNm,jdbcType=VARCHAR},
      </if>
    </set>
    where stock_no = #{stockNo,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 10 18:17:03 CST 2020.
    -->
    update tbl_stock_info
    set stock_nm = #{stockNm,jdbcType=VARCHAR}
    where stock_no = #{stockNo,jdbcType=CHAR}
  </update>
	<resultMap id="BaseResultMap" type="com.lijin.mylab.dao.mybatis.model.StockInfo">
		<id column="stock_no" jdbcType="CHAR" property="stockNo" />
		<result column="stock_nm" jdbcType="VARCHAR" property="stockNm" />
	</resultMap>

	<select id="selectAll" resultMap="BaseResultMap">
		select * from tbl_stock_info
	</select>

	<insert id="add" parameterType="com.lijin.mylab.dao.mybatis.model.StockInfo">
		INSERT INTO tbl_stock_info
		(stock_no, stock_nm)
		VALUES
		(#{stockNo}, #{stockNm})
	</insert>
	
	<insert id="batchAdd" parameterType="java.util.List">
		INSERT INTO tbl_stock_info
		(stock_no, stock_nm)
		VALUES
		<foreach collection="lst" index="index" item="e" separator=",">
			(#{e.stockNo}, #{e.stockNm})
		</foreach>
	</insert>

	<delete id="delete">
		delete from tbl_stock_info where stock_no = #{stockNo,jdbcType=CHAR}
	</delete>
</mapper>